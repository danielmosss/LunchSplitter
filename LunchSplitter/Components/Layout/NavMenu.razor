@using System.Security.Claims
@using LunchSplitter.Domain.Entity
@using LunchSplitter.Services
@inject GroupService groupService
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">LunchSplitter</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<AuthorizeView>
    <Authorized>
        <div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
            <nav class="flex-column">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                    </NavLink>
                </div>
                
                @foreach (var group in groupService.GetGroupsByUserId(GetUserId()))
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="@("group/" + group.Id)">
                            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> @group.Name
                        </NavLink>
                    </div>
                }
            </nav>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
            <nav class="flex-column">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="login">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="signup">
                        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Signup
                    </NavLink>
                </div>
            </nav>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code{
    private int GetUserId()
    {
        var authState = authenticationStateProvider.GetAuthenticationStateAsync().Result;
        var user = authState.User;
        if (user.Identity?.IsAuthenticated != true)
        {
            navigationManager.NavigateTo("/login");
            throw new Exception("User is not authenticated");
        }
        return int.Parse(user.FindFirstValue(ClaimTypes.NameIdentifier));
    }
}