@page "/invite/{inviteId}"
@using System.Security.Claims
@using LunchSplitter.Services
@inject GroupService groupService
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authenticationStateProvider

@code {
    [Parameter]
    public string inviteId { get; set; }

    protected override void OnInitialized()
    {
        try
        {
            var invite = groupService.GetInvite(Guid.Parse(inviteId));
            if (invite == null)
            {
                //navigationManager.NavigateTo("/error", true);
            }
            else
            {
                groupService.UseInvite(invite.Id, GetUserId());
                //navigationManager.NavigateTo("/");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error initializing component: {ex.Message}");
            navigationManager.NavigateTo("/error");
        }
    }

    private int GetUserId()
    {
        var authState = authenticationStateProvider.GetAuthenticationStateAsync().Result;
        var user = authState.User;
        return int.Parse(user.FindFirstValue(ClaimTypes.NameIdentifier));
    }
}
